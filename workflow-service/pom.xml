<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>workflow-service</artifactId>
    <packaging>jar</packaging>

    <name>Workflow: Service</name>
    <description>
        Provides a service for starting and managing CloudKeeper workflow executions using a simple Java interface.
    </description>

    <parent>
        <groupId>com.svbio.workflow</groupId>
        <artifactId>workflow</artifactId>
        <version>1.0.0.0-SNAPSHOT</version>
    </parent>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Annotation processing is done with the maven-process-plugin. Unfortunately, adding a
                         dependencies sections to the maven-compiler-plugin has no effect, so the annotation processors
                         would have to be declared as ordinary optional dependencies (in the main dependency section).
                         That is clearly undesirable.
                         External documentation of the issue: http://stackoverflow.com/q/26228563 -->
                    <proc>none</proc>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <usedDependencies>
                        <usedDependency>org.postgresql:postgresql</usedDependency>
                    </usedDependencies>
                </configuration>
            </plugin>

            <!-- The maven-processor-plugin is used to run annotation processors. See comments for
                 maven-compiler-plugin. -->
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <!-- It is not necessary to explicitly specify annotation processors as there is a discovery
                                 mechanism, but we do it anyway to avoid a warning by the maven-processor-plugin. -->
                            <processors>
                                <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
                                <processor>dagger.internal.codegen.ComponentProcessor</processor>
                            </processors>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-jpamodelgen</artifactId>
                        <version>${hibernate.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.google.dagger</groupId>
                        <artifactId>dagger-compiler</artifactId>
                        <version>${dagger.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.svbio.workflow</groupId>
            <artifactId>workflow-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.svbio.workflow</groupId>
            <artifactId>workflow-runtimecontext</artifactId>
        </dependency>
        <dependency>
            <!-- We include workflow-forked-executor JAR, so that we can run it by default, even if no command line is
                 configured. -->
            <groupId>com.svbio.workflow</groupId>
            <artifactId>workflow-forked-executor</artifactId>
        </dependency>
        <dependency>
            <!-- We need the core bundle because it contains the Requirements annotation -->
            <groupId>com.svbio.workflow.bundles</groupId>
            <artifactId>workflow-bundle-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.svbio.cloudkeeper.core</groupId>
            <artifactId>cloudkeeper-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.svbio.cloudkeeper.core</groupId>
            <artifactId>cloudkeeper-interpreter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.svbio.cloudkeeper.core</groupId>
            <artifactId>cloudkeeper-linker</artifactId>
        </dependency>
        <dependency>
            <groupId>com.svbio.cloudkeeper.core</groupId>
            <artifactId>cloudkeeper-model</artifactId>
        </dependency>
        <dependency>
            <groupId>com.svbio.cloudkeeper.core</groupId>
            <artifactId>cloudkeeper-basic</artifactId>
        </dependency>

        <dependency>
            <groupId>com.svbio.cloudkeeper.executors</groupId>
            <artifactId>cloudkeeper-drmaa_1.0</artifactId>
        </dependency>
        <dependency>
            <groupId>com.svbio.cloudkeeper.executors</groupId>
            <artifactId>cloudkeeper-drmaa-executor</artifactId>
        </dependency>
        <dependency>
            <groupId>com.svbio.cloudkeeper.executors</groupId>
            <artifactId>cloudkeeper-forking-executor</artifactId>
        </dependency>

        <dependency>
            <groupId>com.svbio.cloudkeeper</groupId>
            <artifactId>cloudkeeper-file-staging</artifactId>
        </dependency>

        <dependency>
            <groupId>com.svbio.cloudkeeper.maven</groupId>
            <artifactId>cloudkeeper-maven-bundles</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.dagger</groupId>
            <artifactId>dagger</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.11</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.aether</groupId>
            <artifactId>aether-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.svbio.cloudkeeper.core</groupId>
            <artifactId>cloudkeeper-testkit</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.svbio.cloudkeeper.maven</groupId>
            <artifactId>cloudkeeper-maven-testkit</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_2.11</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
